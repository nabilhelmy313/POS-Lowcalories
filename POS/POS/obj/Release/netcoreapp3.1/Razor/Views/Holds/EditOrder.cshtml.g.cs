#pragma checksum "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "65dd8fc74118693c98eb002316add68fc5db6c09"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Holds_EditOrder), @"mvc.1.0.view", @"/Views/Holds/EditOrder.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "E:\work\POS-Lowcalories\POS\POS\Views\_ViewImports.cshtml"
using POS;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "E:\work\POS-Lowcalories\POS\POS\Views\_ViewImports.cshtml"
using POS.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "E:\work\POS-Lowcalories\POS\POS\Views\_ViewImports.cshtml"
using POS.Data;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "E:\work\POS-Lowcalories\POS\POS\Views\_ViewImports.cshtml"
using POS.ViewModel;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"65dd8fc74118693c98eb002316add68fc5db6c09", @"/Views/Holds/EditOrder.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"39c148cdf359b210654bb7d9635177bfc3524c70", @"/Views/_ViewImports.cshtml")]
    public class Views_Holds_EditOrder : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<POS.ViewModel.EditOrderVM>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/layout/assets/logo.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("logo"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("img-fluid"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", "text", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("orderid"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("display:none"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString(" form-control branchid"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "EditOrder", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("saveorder"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("order"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", "_OrderPartial", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n<header>\r\n    <div class=\"row no-gutters\">\r\n        <div class=\"col-md-2 p-0\">\r\n            <aside class=\"text-center\">\r\n                <div class=\"logo py-4\">\r\n                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "65dd8fc74118693c98eb002316add68fc5db6c097945", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                </div>\r\n");
            WriteLiteral("                <div class=\"row no-gutters\" id=\"categories\">\r\n");
#nullable restore
#line 12 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"
                     foreach (var item in Model.Categories)
                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <div class=\"col-12\">\r\n                            <button");
            BeginWriteAttribute("id", " id=\"", 568, "\"", 581, 1);
#nullable restore
#line 15 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"
WriteAttributeValue("", 573, item.Id, 573, 8, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(" class=\"btn aside-btn bg-gradient text-white px-4 py-2 radius my-3 shadow cat\">\r\n                                <i class=\"fas fa-hamburger py-2 fa-2x\"></i>\r\n                                <br>  ");
#nullable restore
#line 17 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"
                                 Write(item.Name);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                            </button>\r\n                        </div>\r\n");
#nullable restore
#line 20 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("                </div>\r\n");
            WriteLiteral("\r\n");
            WriteLiteral(@"                <div class=""row no-gutters"">
                    <div class=""col-xl-9 col-11 m-auto border-gradient radius py-1 branch"">
                        <div class=""d-flex justify-content-center align-items-center py-2 text-dark "">
                            <i class=""fas fa-store mr-3""></i>
                            <h6 class=""m-0"">Branch Name</h6>
                        </div>
                    </div>
                </div>
");
            WriteLiteral(@"
            </aside>
        </div>

        <div class=""col-md-10 p-0"">
            <section class=""bg-mine radius-top-left"">
                <div class=""container-lg"">
                    <div class=""row no-gutters"" id=""searchSection"">
                        <div class=""col-12 bg-white my-4 py-3 radius"">
                            <div class=""row"">

                                <div class=""col-lg-10"">
                                    <div class=""row no-gutters mt-2 search-btn"">
                                        <div class=""col-lg-6 py-2"">
");
            WriteLiteral(@"                                            <button class=""btn bg-gradient ml-4 mr-2 text-white radius searchmeal"" style=""padding: 13px 15px; vertical-align:0;"">search meal</button>
                                            <input id=""searchmeal"" type=""text"" class=""form-control border-gradient d-inline w-50 radius py-4"" placeholder=""Search For Meal"">
");
            WriteLiteral(@"
                                        </div>

                                        <div class=""col-lg-6 py-2"">
                                            <button data-toggle=""modal"" data-target=""#exampleModal2"" class=""btn bg-gradient ml-4 mr-2 text-white radius custsearch"" style=""padding: 13px 15px; vertical-align:0;"">search customer</button>
                                            <input type=""text"" id=""custphone""");
            BeginWriteAttribute("value", " value=\"", 2968, "\"", 2998, 1);
#nullable restore
#line 57 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"
WriteAttributeValue("", 2976, Model.Order.CustPhone, 2976, 22, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" class=""form-control border-gradient d-inline w-50 radius py-4"" placeholder=""customer number"">
                                            <div class=""modal fade"" id=""exampleModal2"" tabindex=""-1"" aria-labelledby=""exampleModalLabel"" aria-hidden=""true"">
                                                <div class=""modal-dialog modal-lg modal-dialog-centered"">
                                                    <div class=""modal-content"">
                                                        <div class=""modal-header"" style="" background: linear-gradient(180deg,#F97F46 0,#F74972); "">
                                                            <h5 class=""modal-title"" style=""color:white;"" id=""exampleModalLabel"">CUSTOMER INFORAMTION</h5>
                                                            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                                                <span aria-hidden=""true"">&times;</span>
                                   ");
            WriteLiteral(@"                         </button>
                                                        </div>
                                                        <div class=""modal-body"" id=""custinfo"">

                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>


                            </div>
                        </div>
                    </div>

                    <div class=""row m-0"">
                        <div class=""col-xl-7 col-sm-9"">
                            <div class=""row"" id=""meals"">


                            </div>
                        </div>
                        <div class=""col-xl-2 col-sm-3 my-3 bg-gradient radius py-2"" id=""mealdetail"">
                            ");
            WriteLiteral(@"<h6 class='text-center text-white my-3'>
                                NAME OF MEAL
                            </h6>
                            <div class='bg-white overflow-auto radius py-3 px-2 my-3 meal-details'>
                                <small class='text-gradient float-left'>
                                    <b>150 gram </b>
                                </small>
                                <small class='text-gradient float-right'>
                                    <b>20 AED</b>
                                </small>
                            </div>
                        </div>
                        <div class=""col-xl-3 my-3"">
                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "65dd8fc74118693c98eb002316add68fc5db6c0915944", async() => {
                WriteLiteral("\r\n                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "65dd8fc74118693c98eb002316add68fc5db6c0916235", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.InputTypeName = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
#nullable restore
#line 104 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.Order.Id);

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                <div class=""order-type mt-3"">
                                    <div class=""text-center"">
                                        <div class=""d-inline-block my-1"" style=""width: fit-content;"">
                                            <label class=""text-center text-gradient w-100"" style=""font-size: 16px;"">TYPE</label>
                                        </div>
                                        <div class=""bg-white p-1 radius d-inline-block my-1"" style=""width: fit-content;"">
                                            <input type=""radio"" name=""ordertype"" value=""TAKE AWAY"" class=""required"" checked>
                                            <label class=""m-0 text-gradient"">TAKE AWAY</label>
                                        </div>
                                        <div class=""bg-white p-1 radius d-inline-block my-1"" style=""width: fit-content;"">
                                            <input type=""radio"" name=""ordertype"" value=""DILIVARY"" c");
                WriteLiteral(@"lass=""required"">
                                            <label class=""m-0 text-gradient"">DILIVARY</label>
                                        </div>
                                    </div>
                                </div>

                                <div class=""mt-3"" id=""select-order"">
                                    <div class=""form-group"">
                                        <label class=""text-gradient"">Branch</label>
                                        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("select", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "65dd8fc74118693c98eb002316add68fc5db6c0919704", async() => {
                    WriteLiteral("\r\n                                        ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
#nullable restore
#line 124 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items = (new SelectList(Model.Branches,"Id","Name"));

#line default
#line hidden
#nullable disable
                __tagHelperExecutionContext.AddTagHelperAttribute("asp-items", __Microsoft_AspNetCore_Mvc_TagHelpers_SelectTagHelper.Items, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                                    </div>

                                    <div class=""form-group"">
                                        <label class=""text-gradient"">Address</label>
                                        <select class=""form-control address"">
                                        </select>
                                    </div>

                                    <div class=""form-group d-flex"">
                                        <div class=""mx-auto justify-content-center d-flex flex-wrap align-items-center"">
                                            <label style=""font-size: 8px;""");
                BeginWriteAttribute("for", " for=\"", 8237, "\"", 8243, 0);
                EndWriteAttribute();
                WriteLiteral(">NET</label>\r\n                                            <input type=\"text\"");
                BeginWriteAttribute("value", "   value=\"", 8320, "\"", 8346, 1);
#nullable restore
#line 137 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"
WriteAttributeValue("", 8330, Model.Order.Net, 8330, 16, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@"  id=""netInput"" style=""width: 38px;"" class=""mx-1 text-center in text-gradient border-gradient netInput"">
                                        </div>

                                        <div class=""mx-auto justify-content-center d-flex flex-wrap align-items-center"">
                                            <label style=""font-size: 8px;""");
                BeginWriteAttribute("for", " for=\"", 8699, "\"", 8705, 0);
                EndWriteAttribute();
                WriteLiteral(">TAX</label>\r\n                                            <input type=\"text\"");
                BeginWriteAttribute("value", " value=\"", 8782, "\"", 8806, 1);
#nullable restore
#line 142 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"
WriteAttributeValue("", 8790, Model.Order.Tax, 8790, 16, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@" id=""taxInput"" style=""width: 38px;"" class=""mx-1 in text-center text-gradient border-gradient taxInput"">
                                        </div>

                                        <div class=""mx-auto justify-content-center d-flex flex-wrap align-items-center"">
                                            <label style=""font-size: 8px;""");
                BeginWriteAttribute("for", " for=\"", 9158, "\"", 9164, 0);
                EndWriteAttribute();
                WriteLiteral(">SERVICE</label>\r\n                                            <input type=\"text\"");
                BeginWriteAttribute("value", " value=\"", 9245, "\"", 9273, 1);
#nullable restore
#line 147 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"
WriteAttributeValue("", 9253, Model.Order.Service, 9253, 20, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@"  id=""serviceInput"" style=""width: 38px;"" class=""mx-1 in text-center text-gradient border-gradient serviceInput"">
                                        </div>

                                        <div class=""mx-auto justify-content-center d-flex flex-wrap align-items-center"">
                                            <label style=""font-size: 8px;""");
                BeginWriteAttribute("for", " for=\"", 9634, "\"", 9640, 0);
                EndWriteAttribute();
                WriteLiteral(">DISCOUNT</label>\r\n                                            <input placeholder=\"%\"");
                BeginWriteAttribute("value", " value=\"", 9726, "\"", 9755, 1);
#nullable restore
#line 152 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"
WriteAttributeValue("", 9734, Model.Order.Discount, 9734, 21, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@"   type=""text"" id=""discountInput"" style=""width: 38px;"" class=""mx-1 in text-center text-gradient border-gradient discountInput"">
                                        </div>

                                        <div class=""mx-auto justify-content-center d-flex flex-wrap align-items-center "">
                                            <label style=""font-size: 8px;""");
                BeginWriteAttribute("for", " for=\"", 10132, "\"", 10138, 0);
                EndWriteAttribute();
                WriteLiteral(">TOTAL</label>\r\n                                            <input type=\"text\"");
                BeginWriteAttribute("value", " value=\"", 10217, "\"", 10243, 1);
#nullable restore
#line 157 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"
WriteAttributeValue("", 10225, Model.Order.Total, 10225, 18, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(@" id=""totalInput"" style=""width: 45px;"" class=""mx-1 text-center text-gradient border-gradient"" disabled>
                                        </div>
                                    </div>
                                </div>

                                <hr>

                                <div id=""order"" style=""overflow-y: scroll; overflow-x: hidden;"">
");
#nullable restore
#line 165 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"
                                     foreach (var item in Model.OrderDetails)
                                    {

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                                        <div class=""order-number overflow-auto my-4"">
                                            <div class=""order-name float-left d-flex justify-content-center align-items-center"">
                                                <i class=""far fa-trash-alt text-gradient pointer"" onclick='deleteOrder(event)'></i>
                                                <div class=""alldata ml-2"">
                                                    <h6 class=""m-0"" style=""font-size: 14px;""");
                BeginWriteAttribute("id", " id=\"", 11256, "\"", 11274, 1);
#nullable restore
#line 171 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"
WriteAttributeValue("", 11261, item.Meal.Id, 11261, 13, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" data-topass=\"");
#nullable restore
#line 171 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"
                                                                                                                        Write(item.Meal.Name);

#line default
#line hidden
#nullable disable
                WriteLiteral("\">");
#nullable restore
#line 171 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"
                                                                                                                                         Write(item.Meal.Name);

#line default
#line hidden
#nullable disable
                WriteLiteral("</h6>\r\n                                                    <p class=\"text-muted itemname\"");
                BeginWriteAttribute("id", " id=\"", 11410, "\"", 11428, 1);
#nullable restore
#line 172 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"
WriteAttributeValue("", 11415, item.Meal.Id, 11415, 13, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" data-topass=\"");
#nullable restore
#line 172 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"
                                                                                                              Write(item.Meal.Name);

#line default
#line hidden
#nullable disable
                WriteLiteral("\">");
#nullable restore
#line 172 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"
                                                                                                                               Write(item.Meal.Name);

#line default
#line hidden
#nullable disable
                WriteLiteral("</p>\r\n                                                    <span class=\"text-muted price\" data-topass=\"");
#nullable restore
#line 173 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"
                                                                                           Write(item.UnitPrice);

#line default
#line hidden
#nullable disable
                WriteLiteral("\">");
#nullable restore
#line 173 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"
                                                                                                            Write(item.UnitPrice);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</span><span class=""text-muted""> AED</span>

                                                </div>
                                            </div>
                                            <div class=""counter float-right d-flex justify-content-center align-items-center"">
                                                <div class=""num"">");
#nullable restore
#line 178 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"
                                                            Write(item.Quantity);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"</div>
                                                <div class=""counterBtn"">
                                                    <button type=""button"" class=""btn bg-gradient text-white d-block py-0 px-2 counterUp"" onclick='getCounterUp(event)'>
                                                        <i class=""fas fa-angle-up""></i>
                                                    </button>
                                                    <button type=""button"" class=""btn bg-gradient text-white d-block py-0 px-2 counterDown"" onclick='getCounterDown(event)'>
                                                        <i class=""fas fa-angle-down""></i>
                                                    </button>
                                                </div>
                                            </div>
                                            <div class=""clearfix""></div>
                                        </div>
");
#nullable restore
#line 190 "E:\work\POS-Lowcalories\POS\POS\Views\Holds\EditOrder.cshtml"

                                    }

#line default
#line hidden
#nullable disable
                WriteLiteral("                                </div>\r\n                                <button class=\"btn bg-gradient radius btn-block text-white mt-3 save\" type=\"button\">SAVE</button>\r\n                            ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_7.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        </div>\r\n    </div>\r\n</header>\r\n\r\n\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("partial", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "65dd8fc74118693c98eb002316add68fc5db6c0934053", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_PartialTagHelper.Name = (string)__tagHelperAttribute_10.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_10);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script type=""text/javascript"">
        $(document).ready(function () {
            $(document).on(""input"", "".in"", function () {
                let total = parseFloat($('#netInput').val()) + parseFloat($('#taxInput').val())
                    + parseFloat($('#serviceInput').val());
                let q = parseFloat($("".orderqan"")).val();
                let x = total;
                $(""#totalInput"").val(x);
            });
            $("".cat"").click(function () {
                var id = $(this).attr(""id"");
                var url = ""/Order/GetMeals"";
                var item = """";
                $(""#meals"").empty();
                $(""#mealdetail"").empty();
                $.getJSON(url, { id: id }, function (data) {
                    $(""#meals"").html(data);
                    $("".buyNow"").click(function () {
                        var id = $(this).attr(""id"");
                        var url = ""/Order/GetDetails"";
                        $.getJSON(url, { id: id }, function");
                WriteLiteral(@" (data) {
                            $(""#mealdetail"").html(data);
                            $("".meal-details"").click(function () {
                                var id = $(this).attr(""id"");
                                var mealname = $("".mealname"").attr(""data-topass"");
                                var mealid = $("".mealname"").attr(""id"");
                                var qan = $(""#"" + id + 'q')[0].innerText;
                                var pri = $(""#"" + id + ""p"")[0].innerText;
                                var t = `
                                                                        <div id=""order-number"" class=""order-number overflow-auto my-4"">


                                                                            <div class=""order-name float-left d-flex justify-content-center align-items-center"">
                                                                                <i class=""far fa-trash-alt text-gradient pointer del"" onclick='deleteOrder(event)'></i>
   ");
                WriteLiteral(@"                                                                             <div class=""ml-2 alldata"">
                                                                                <h6 class=""m-0"" style=""font-size: 14px;"" id=""${mealid}"" data-topass=""${mealname}"">${mealname}</h6>
                                                                                <p class=""text-muted itemname"" id=""${id}"" data-topass=""${qan}"">${qan}</p>
                                                                                <span class=""text-muted price"" data-topass=""${pri}"">${pri}</span><span class=""text-muted""> AED</span>

                                                                                </div>

                                                                            </div>
                                                                                <div class=""counter float-right d-flex justify-content-center align-items-center"">
                                                             ");
                WriteLiteral(@"               <div class=""num"">1</div>
                                                                            <div class=""counterBtn"">
                                                                                <button type=""button"" class=""btn bg-gradient text-white d-block py-0 px-2 counterUp"" onclick='getCounterUp(event)'>
                                                                                    <i class=""fas fa-angle-up""></i>
                                                                                </button>
                                                                                <button type=""button"" class=""btn bg-gradient text-white d-block py-0 px-2 counterDown"" onclick='getCounterDown(event)'>
                                                                                    <i class=""fas fa-angle-down""></i>
                                                                                </button>
                                                                 ");
                WriteLiteral(@"           </div>
                                                                        </div>
                                                                            <div class=""clearfix""></div>
                                                                        </div>
                                                                              `;
                                $(""#order"").append(t);
                                let total = 0;
                                let qun = 0;
                                let p = $("".order-number .price"");
                                let vl = parseFloat($(""#netInput"").val());
                                let vl2 = parseFloat($(""#totalInput"").val());
                                for (var i = 0; i < p.length; i++) {
                                    total = parseFloat(p[i].innerText);
                                }
                                $(""#netInput"").val(total + vl);
                                $(""#total");
                WriteLiteral(@"Input"").val(total + vl2);
                            });
                        });

                    });
                });
            });

            //SAVE ORDER
            $("".save"").click(function () {
                if (!$('.address').val()) {
                    var x = `<div class=""alert alert-dismissible fixed-bottom radius text-white border-0"" id=""successSave""
                                                                         style=""width: fit-content; left: auto; right: 20px; bottom: auto; top: 20px; background: linear-gradient(180deg,#F97F4690 0,#f7497290);"">
                                                                          <div class=""card-header border-white d-flex justify-content-between align-items-center""
                                                                           style=""border-top-left-radius: 14px !important; border-top-right-radius: 14px !important"">
                                                                            <span class");
                WriteLiteral(@"=""text-white"">ERROR</span>
                                                                                      <button type=""button"" class=""close"" data-dismiss=""alert"" aria-label=""Close"">
                                                                            <span aria-hidden=""true"">&times;</span>
                                                                          </button>
                                                                          </div>
                                                                          <div class=""card-body"">
                                                                            <p class=""text-white"">PLEASE SELECT ADDRESS</p>
                                                                          </div>
                                                                        </div>`;
                    $(""#saveorder"").append(x);
                    return;
                };
                var x = $(""#order"").children("".order-number"").l");
                WriteLiteral(@"ength

                if (x == 0) {
                    var x = `<div class=""alert alert-dismissible fixed-bottom radius text-white border-0"" id=""successSave""
                                                                         style=""width: fit-content; left: auto; right: 20px; bottom: auto; top: 20px; background: linear-gradient(180deg,#F97F4690 0,#f7497290);"">
                                                                          <div class=""card-header border-white d-flex justify-content-between align-items-center""
                                                                           style=""border-top-left-radius: 14px !important; border-top-right-radius: 14px !important"">
                                                                            <span class=""text-white"">ERROR</span>
                                                                                      <button type=""button"" class=""close"" data-dismiss=""alert"" aria-label=""Close"">
                                       ");
                WriteLiteral(@"                                     <span aria-hidden=""true"">&times;</span>
                                                                          </button>
                                                                          </div>
                                                                          <div class=""card-body"">
                                                                            <p class=""text-white"">NO ORDER ITEM IN LIST</p>
                                                                          </div>
                                                                        </div>`;
                    $(""#saveorder"").append(x);
                    return;
                }
                var userwow = $("".userid"").val();
                var type = $('input[name=""ordertype""]:checked').val();
                var custphone = $('#custphone').val();
                var branchid = $("".branchid"").val();
                var addid = $("".address"").val();
            ");
                WriteLiteral(@"    var tax = getInputTaxValue();
                var discount = getInputDiscountValue();
                var service = getInputServiceValue();
                var net = $(""#netInput"").val();
                let t = $(""#totalInput"").val();
                let orderid = $(""#orderid"").val();
                var details = new Array();
                var orderdetail = $("".alldata"").each(function () {
                    var orders = {};
                    var mid = $(this).children('.itemname');
                    var price = $(this).children('.price');
                    var q = $(this).parents("".order-number"").children("".counter"").children("".num"")[0].innerText;
                    orders.MealId = mid.attr(""id"");
                    orders.Quantity = q;
                    orders.UnitPrice = price.html();

                    details.push(orders);
                });
                var model = {
                    OrderdetailVMs: details,
                    UserId: userwow,
          ");
                WriteLiteral(@"          Type: type,
                    Phone: custphone,
                    BranchId: branchid,
                    AddressID: addid,
                    Tax: tax,
                    Discount: discount,
                    Service: service,
                    Net: net,
                    Total: t,
                    OrderId: orderid,
                };
                $.ajax({
                    type: ""post"",
                    url: ""/Holds/EditOrder"",

                    data: model,
                    success: function (data) {
                        window.location = '/Order/Index';
                    },
                    error: function (err) {
                        alert('error' + err.responsetext);
                    }
                })

            });
            //customer serch
            $("".custsearch"").click(function () {
                var phone1 = $('#custphone').val();
                var phone2 = $('#custphone').val();
                var url");
                WriteLiteral(@" = ""/Order/GetCustomer"";
                var url1 = ""/Order/GetAddress"";
                $(""#custinfo"").empty();
                $("".address"").empty();
                $("".address"").html(""<option disabled selected>choose an address</option>"");
                $.getJSON(url, { phone1: phone1, phone2: phone2 }, function (data) {
                    $(""#custinfo"").html(data);

                })
                $.getJSON(url1, { phone1: phone1, phone2: phone2 }, function (data) {
                    $("".address"").html(data)
                })
            });
            $("".searchmeal"").click(function () {
                var meal = $('#searchmeal').val();

                var url = ""/Order/SearchMeal"";
                $(""#meals"").empty();
                $.getJSON(url, { meal: meal }, function (data) {
                    $(""#meals"").html(data);
                    $("".buyNow"").click(function () {
                        var id = $(this).attr(""id"");
                        var url = ""/Orde");
                WriteLiteral(@"r/GetDetails"";
                        $.getJSON(url, { id: id }, function (data) {
                            $(""#mealdetail"").html(data);
                            $("".meal-details"").click(function () {
                                var id = $(this).attr(""id"");
                                var mealname = $("".mealname"").attr(""data-topass"");
                                var mealid = $("".mealname"").attr(""id"");
                                var qan = $(""#"" + id + 'q')[0].innerText;
                                var pri = $(""#"" + id + ""p"")[0].innerText;

                                var t = `
                                                                        <div id=""order-number"" class=""order-number overflow-auto my-4"">


                                                                            <div class=""order-name float-left d-flex justify-content-center align-items-center"">
                                                                                <i class=""far f");
                WriteLiteral(@"a-trash-alt text-gradient pointer del"" onclick='deleteOrder(event)'></i>
                                                                                <div class=""ml-2 alldata"">
                                                                                <h6 class=""m-0"" style=""font-size: 14px;"" id=""${mealid}"" data-topass=""${mealname}"">${mealname}</h6>
                                                                                <p class=""text-muted itemname"" id=""${id}"" data-topass=""${qan}"">${qan}</p>
                                                                                <span class=""text-muted price"" data-topass=""${pri}"">${pri}</span><span class=""text-muted""> AED</span>

                                                                                </div>

                                                                            </div>
                                                                                <div class=""counter float-right d-flex justify-content-center align-");
                WriteLiteral(@"items-center"">
                                                                            <div class=""num"">1</div>
                                                                            <div class=""counterBtn"">
                                                                                <button type=""button"" class=""btn bg-gradient text-white d-block py-0 px-2 counterUp"" onclick='getCounterUp(event)'>
                                                                                    <i class=""fas fa-angle-up""></i>
                                                                                </button>
                                                                                <button type=""button"" class=""btn bg-gradient text-white d-block py-0 px-2 counterDown"" onclick='getCounterDown(event)'>
                                                                                    <i class=""fas fa-angle-down""></i>
                                                                               ");
                WriteLiteral(@" </button>
                                                                            </div>
                                                                        </div>
                                                                            <div class=""clearfix""></div>
                                                                        </div>
                                                                              `;
                                $(""#order"").append(t);
                                let total = 0;
                                let qun = 0;
                                let p = $("".order-number .price"");
                                let vl = parseFloat($(""#netInput"").val());
                                for (var i = 0; i < p.length; i++) {
                                    total = parseFloat(p[i].innerText);
                                }
                                $(""#netInput"").val(total + vl);
                                $(""#totalIn");
                WriteLiteral(@"put"").val(total + vl);
                            });
                        });

                    });

                })
            });

            // TAX VALUE
            function getInputTaxValue() {
                if ($('#taxInput').val().slice(-1) == '%') {
                    let x = (Number($('#taxInput').val().slice(0, -1) / 100));
                    return x;
                } else {
                    let x = $('#taxInput').val();
                    return x.toString();
                }
            }

            // SERVICE VALUE
            function getInputServiceValue() {
                if ($('#serviceInput').val().slice(-1) == '%') {
                    let x = (Number($('#serviceInput').val().slice(0, -1) / 100));
                    return x;
                } else {
                    let x = $('#serviceInput').val();
                    return x.toString();
                }
            }

            // DISCOUNT VALUE
            function getInputDiscountValue() {
 ");
                WriteLiteral(@"               if ($('#discountInput').val().slice(-1) == '%') {
                    let x = (Number($('#discountInput').val().slice(0, -1) / 100));
                    return x;
                } else {
                    let x = $('#discountInput').val();
                    return x.toString();
                }
            }

            // ============================================== Tax ==============================================

            // calculate Tax by percentage or num
            $('#taxInput').blur(() => {
                let Net = Number($('#netInput').val());
                let ServiceValue = getInputServiceValue();
                let taxValue = getInputTaxValue();
                let discountValue = getInputDiscountValue();
                let totalValues;
                let totalCalc;

                // tax % - service % - discount %
                if (typeof (getInputServiceValue()) == 'number' && typeof (getInputDiscountValue()) == 'number' && typeof (getInputTaxValue()) ==");
                WriteLiteral(@" 'number') {
                    taxValue = Number(taxValue) * Number(Net);
                    ServiceValue = Number(ServiceValue) * Number(Net);
                    totalValues = Number(Net) + Number(ServiceValue) + Number(taxValue);
                    discountValue = Number(totalValues) * Number(discountValue);
                    totalCalc = Number(totalValues) - Number(discountValue);
                }
                // tax % - service % - discount num
                else if (typeof (getInputServiceValue()) === 'number' && typeof (getInputDiscountValue()) === 'string' && typeof (getInputTaxValue()) === 'number') {
                    taxValue = Number(taxValue) * Number(Net);
                    ServiceValue = Number(ServiceValue) * Number(Net);
                    totalCalc = (Number(Net) + Number(taxValue) + Number(ServiceValue)) - Number(discountValue);
                }
                // tax % - service num - discount %
                else if (typeof (getInputServiceValue()) === 'string' && type");
                WriteLiteral(@"of (getInputDiscountValue()) === 'number' && typeof (getInputTaxValue()) === 'number') {
                    taxValue = Number(taxValue) * Number(Net);
                    totalValues = Number(Net) + Number(ServiceValue) + Number(taxValue);
                    discountValue = Number(totalValues) * Number(discountValue);
                    totalCalc = Number(totalValues) - Number(discountValue);
                }
                // tax % - service num - discount num
                else if (typeof (getInputServiceValue()) === 'string' && typeof (getInputDiscountValue()) === 'string' && typeof (getInputTaxValue()) === 'number') {
                    taxValue = Number(taxValue) * Number(Net);
                    totalCalc = (Number(Net) + Number(taxValue) + Number(ServiceValue)) - Number(discountValue);
                }
                // =======================================================================
                // tax num - service num - discount num
                else if (typeof (getInputServi");
                WriteLiteral(@"ceValue()) == 'string' && typeof (getInputDiscountValue()) == 'string' && typeof (getInputTaxValue()) == 'string') {
                    totalValues = Number(Net) + Number(ServiceValue) + Number(taxValue);
                    totalCalc = Number(totalValues) - Number(discountValue);
                }
                // tax num - service num - discount %
                else if (typeof (getInputServiceValue()) === 'string' && typeof (getInputDiscountValue()) === 'number' && typeof (getInputTaxValue()) === 'string') {
                    totalValues = Number(Net) + Number(taxValue) + Number(ServiceValue);
                    discountValue = Number(totalValues) * Number(discountValue);
                    totalCalc = Number(totalValues) - Number(discountValue);
                }
                // tax num - service % - discount num
                else if (typeof (getInputServiceValue()) === 'number' && typeof (getInputDiscountValue()) === 'string' && typeof (getInputTaxValue()) === 'string') {
                  ");
                WriteLiteral(@"  ServiceValue = Number(ServiceValue) * Number(Net);
                    totalValues = Number(Net) + Number(ServiceValue) + Number(taxValue);
                    totalCalc = Number(totalValues) - Number(discountValue);
                }
                // tax num - service % - discount %
                else if (typeof (getInputServiceValue()) === 'number' && typeof (getInputDiscountValue()) === 'number' && typeof (getInputTaxValue()) === 'string') {
                    ServiceValue = Number(ServiceValue) * Number(Net);
                    totalValues = Number(Net) + Number(ServiceValue) + Number(taxValue);
                    discountValue = Number(totalValues) * Number(discountValue);
                    totalCalc = Number(totalValues) - Number(discountValue);
                }
                if (totalCalc > 0) {
                    $('#totalInput').val(totalCalc)
                } else {
                    $('#totalInput').val(0)
                }
            });


            // ========================");
                WriteLiteral(@"====================== service ==============================================

            // calculate service by percentage or num
            $('#serviceInput').blur(() => {
                let Net = Number($('#netInput').val());
                let ServiceValue = getInputServiceValue();
                let taxValue = getInputTaxValue();
                let discountValue = getInputDiscountValue();
                let totalValues;
                let totalCalc;

                // tax % - service % - discount %
                if (typeof (getInputServiceValue()) == 'number' && typeof (getInputDiscountValue()) == 'number' && typeof (getInputTaxValue()) == 'number') {
                    taxValue = Number(taxValue) * Number(Net);
                    ServiceValue = Number(ServiceValue) * Number(Net);
                    totalValues = Number(Net) + Number(ServiceValue) + Number(taxValue);
                    discountValue = Number(totalValues) * Number(discountValue);
                    totalCalc = Number(tota");
                WriteLiteral(@"lValues) - Number(discountValue);
                }
                // tax % - service % - discount num
                else if (typeof (getInputServiceValue()) === 'number' && typeof (getInputDiscountValue()) === 'string' && typeof (getInputTaxValue()) === 'number') {
                    taxValue = Number(taxValue) * Number(Net);
                    ServiceValue = Number(ServiceValue) * Number(Net);
                    totalCalc = (Number(Net) + Number(taxValue) + Number(ServiceValue)) - Number(discountValue);
                }
                // tax % - service num - discount %
                else if (typeof (getInputServiceValue()) === 'string' && typeof (getInputDiscountValue()) === 'number' && typeof (getInputTaxValue()) === 'number') {
                    taxValue = Number(taxValue) * Number(Net);
                    totalValues = Number(Net) + Number(ServiceValue) + Number(taxValue);
                    discountValue = Number(totalValues) * Number(discountValue);
                    totalCalc = Number");
                WriteLiteral(@"(totalValues) - Number(discountValue);
                }
                // tax % - service num - discount num
                else if (typeof (getInputServiceValue()) === 'string' && typeof (getInputDiscountValue()) === 'string' && typeof (getInputTaxValue()) === 'number') {
                    taxValue = Number(taxValue) * Number(Net);
                    totalCalc = (Number(Net) + Number(taxValue) + Number(ServiceValue)) - Number(discountValue);
                }
                // =======================================================================
                // tax num - service num - discount num
                else if (typeof (getInputServiceValue()) == 'string' && typeof (getInputDiscountValue()) == 'string' && typeof (getInputTaxValue()) == 'string') {
                    totalValues = Number(Net) + Number(ServiceValue) + Number(taxValue);
                    totalCalc = Number(totalValues) - Number(discountValue);
                }
                // tax num - service num - discount %
     ");
                WriteLiteral(@"           else if (typeof (getInputServiceValue()) === 'string' && typeof (getInputDiscountValue()) === 'number' && typeof (getInputTaxValue()) === 'string') {
                    totalValues = Number(Net) + Number(taxValue) + Number(ServiceValue);
                    discountValue = Number(totalValues) * Number(discountValue);
                    totalCalc = Number(totalValues) - Number(discountValue);
                }
                // tax num - service % - discount num
                else if (typeof (getInputServiceValue()) === 'number' && typeof (getInputDiscountValue()) === 'string' && typeof (getInputTaxValue()) === 'string') {
                    ServiceValue = Number(ServiceValue) * Number(Net);
                    totalValues = Number(Net) + Number(ServiceValue) + Number(taxValue);
                    totalCalc = Number(totalValues) - Number(discountValue);
                }
                // tax num - service % - discount %
                else if (typeof (getInputServiceValue()) === 'number' &");
                WriteLiteral(@"& typeof (getInputDiscountValue()) === 'number' && typeof (getInputTaxValue()) === 'string') {
                    ServiceValue = Number(ServiceValue) * Number(Net);
                    totalValues = Number(Net) + Number(ServiceValue) + Number(taxValue);
                    discountValue = Number(totalValues) * Number(discountValue);
                    totalCalc = Number(totalValues) - Number(discountValue);
                }
                if (totalCalc > 0) {
                    $('#totalInput').val(totalCalc)
                } else {
                    $('#totalInput').val(0)
                }
            });

            // ============================================== discountInput ================================================== 

            // calculate discount by percentage or num
            $('#discountInput').blur(() => {
                let Net = Number($('#netInput').val());
                let ServiceValue = getInputServiceValue();
                let taxValue = getInputTaxValue();
     ");
                WriteLiteral(@"           let discountValue = getInputDiscountValue();
                let totalValues;
                let totalCalc;

                // tax % - service % - discount %
                if (typeof (getInputServiceValue()) == 'number' && typeof (getInputDiscountValue()) == 'number' && typeof (getInputTaxValue()) == 'number') {
                    taxValue = Number(taxValue) * Number(Net);
                    ServiceValue = Number(ServiceValue) * Number(Net);
                    totalValues = Number(Net) + Number(ServiceValue) + Number(taxValue);
                    discountValue = Number(totalValues) * Number(discountValue);
                    totalCalc = Number(totalValues) - Number(discountValue);
                }
                // tax % - service % - discount num
                else if (typeof (getInputServiceValue()) === 'number' && typeof (getInputDiscountValue()) === 'string' && typeof (getInputTaxValue()) === 'number') {
                    taxValue = Number(taxValue) * Number(Net);
               ");
                WriteLiteral(@"     ServiceValue = Number(ServiceValue) * Number(Net);
                    totalCalc = (Number(Net) + Number(taxValue) + Number(ServiceValue)) - Number(discountValue);
                }
                // tax % - service num - discount %
                else if (typeof (getInputServiceValue()) === 'string' && typeof (getInputDiscountValue()) === 'number' && typeof (getInputTaxValue()) === 'number') {
                    taxValue = Number(taxValue) * Number(Net);
                    totalValues = Number(Net) + Number(ServiceValue) + Number(taxValue);
                    discountValue = Number(totalValues) * Number(discountValue);
                    totalCalc = Number(totalValues) - Number(discountValue);
                }
                // tax % - service num - discount num
                else if (typeof (getInputServiceValue()) === 'string' && typeof (getInputDiscountValue()) === 'string' && typeof (getInputTaxValue()) === 'number') {
                    taxValue = Number(taxValue) * Number(Net);
        ");
                WriteLiteral(@"            totalCalc = (Number(Net) + Number(taxValue) + Number(ServiceValue)) - Number(discountValue);
                }
                // =======================================================================
                // tax num - service num - discount num
                else if (typeof (getInputServiceValue()) == 'string' && typeof (getInputDiscountValue()) == 'string' && typeof (getInputTaxValue()) == 'string') {
                    totalValues = Number(Net) + Number(ServiceValue) + Number(taxValue);
                    totalCalc = Number(totalValues) - Number(discountValue);
                }
                // tax num - service num - discount %
                else if (typeof (getInputServiceValue()) === 'string' && typeof (getInputDiscountValue()) === 'number' && typeof (getInputTaxValue()) === 'string') {
                    totalValues = Number(Net) + Number(taxValue) + Number(ServiceValue);
                    discountValue = Number(totalValues) * Number(discountValue);
                 ");
                WriteLiteral(@"   totalCalc = Number(totalValues) - Number(discountValue);
                }
                // tax num - service % - discount num
                else if (typeof (getInputServiceValue()) === 'number' && typeof (getInputDiscountValue()) === 'string' && typeof (getInputTaxValue()) === 'string') {
                    ServiceValue = Number(ServiceValue) * Number(Net);
                    totalValues = Number(Net) + Number(ServiceValue) + Number(taxValue);
                    totalCalc = Number(totalValues) - Number(discountValue);
                }
                // tax num - service % - discount %
                else if (typeof (getInputServiceValue()) === 'number' && typeof (getInputDiscountValue()) === 'number' && typeof (getInputTaxValue()) === 'string') {
                    ServiceValue = Number(ServiceValue) * Number(Net);
                    totalValues = Number(Net) + Number(ServiceValue) + Number(taxValue);
                    discountValue = Number(totalValues) * Number(discountValue);
            ");
                WriteLiteral(@"        totalCalc = Number(totalValues) - Number(discountValue);
                }
                if (totalCalc > 0) {
                    $('#totalInput').val(totalCalc)
                } else {
                    $('#totalInput').val(0)
                }
            });

        

        });
        // Counter Up
        function getCounterUp(event) {
            event.preventDefault();
          
            
            let buttonUp = document.querySelectorAll("".counterUp"");
            let countUp = 1;
            if (event.composedPath()[3].className == ""counter float-right d-flex justify-content-center align-items-center"") {
                debugger;
                countUp = Number(event.composedPath()[3].children[0].innerText) + 1;
                event.composedPath()[3].children[0].innerText = countUp;
                let pri = event.composedPath()[4].children[0].children[1].children[2].innerText;
                let q = event.composedPath()[4].children[1].children[0].innerText;");
                WriteLiteral(@"
                let netqold = parseFloat(pri) * parseFloat(q - 1);
                let netq = parseFloat(pri) * parseFloat(q);
                let x = parseFloat($(""#netInput"").val()) + (netq - netqold);
                let y = parseFloat($(""#totalInput"").val()) + (netq - netqold);
                $(""#netInput"").val(x);
                $(""#totalInput"").val(y);

            } else {
                debugger;
                countUp = Number(event.composedPath()[2].children[0].innerText) + 1;
                event.composedPath()[2].children[0].innerText = countUp;
                let pri = event.composedPath()[3].children[0].children[1].children[2].innerText;
                let q = event.composedPath()[3].children[1].children[0].innerText;
                let netqold = parseFloat(pri) * parseFloat(q - 1);
                let netq = parseFloat(pri) * parseFloat(q);
                let x = parseFloat($(""#netInput"").val()) + (netq - netqold);
                let y = parseFloat($(""#totalInput"").va");
                WriteLiteral(@"l()) + (netq - netqold);
                $(""#netInput"").val(x);
                $(""#totalInput"").val(y);


            }

            for (let i = 0; i < buttonUp.length; i++) {
                $(buttonUp[i]).css({ 'box-shadow': ""none"", 'outline': ""0"" });
            }

        }

        // Counter Down
        function getCounterDown(event) {
            

            event.preventDefault();
            let buttonDown = document.querySelectorAll("".counterDown"");
            let countDown = 1;

            if (event.composedPath()[3].className == ""counter float-right d-flex justify-content-center align-items-center"") {

                if (event.composedPath()[3].children[0].innerText > 1) {
                    countDown = Number(event.composedPath()[3].children[0].innerText) - 1;
                    event.composedPath()[3].children[0].innerText = countDown;
                    let pri = event.composedPath()[4].children[0].children[1].children[2].innerText;
                    let ");
                WriteLiteral(@"q = event.composedPath()[4].children[1].children[0].innerText;
                    let netqold = parseFloat(pri) * parseFloat(q - 1);
                    let netq = parseFloat(pri) * parseFloat(q);
                    let x = parseFloat($(""#netInput"").val()) - (netq - netqold);
                    let y = parseFloat($(""#totalInput"").val()) - (netq - netqold);
                    $(""#netInput"").val(x);
                    $(""#totalInput"").val(y);
                }


            } else {

                if (event.composedPath()[2].children[0].innerText > 1) {
                    countDown = Number(event.composedPath()[2].children[0].innerText) - 1;
                    event.composedPath()[2].children[0].innerText = countDown;
                    let pri = event.composedPath()[3].children[0].children[1].children[2].innerText;
                    let q = event.composedPath()[3].children[1].children[0].innerText;
                    let netqold = parseFloat(pri) * parseFloat(q - 1);
            ");
                WriteLiteral(@"        let netq = parseFloat(pri) * parseFloat(q);
                    let x = parseFloat($(""#netInput"").val()) - (netq - netqold);
                    let y = parseFloat($(""#totalInput"").val()) - (netq - netqold);
                    $(""#netInput"").val(x);
                    $(""#totalInput"").val(y);

                }

            }

            for (let i = 0; i < buttonDown.length; i++) {
                $(buttonDown[i]).css({ 'box-shadow': ""none"", 'outline': ""0"" });
            }
        }
        //delete item
        function deleteOrder(event) {
            //let total = 0;
            //let qun = 0;
            //let vl = parseFloat($(""#netInput"").val());

            //let p = $("".order-number .price"");
            //for (var i = 0; i < p.length; i++) {
            //    total = parseFloat(p[i].innerText);
            //};
            //let q = $("".order-number .num"");
            //for (let y = 0; y < q.length; y++) {
            //    qun = parseFloat(q[i].innerText);
 ");
                WriteLiteral(@"           //};
            //alert(qun);
            let q = event.composedPath()[2].children[1].children[0].innerText;
            let p = event.composedPath()[2].children[0].children[1].children[2].innerText;
            let tot = parseFloat(q) * parseFloat(p);
            let total = parseFloat($(""#netInput"").val() - tot);
            let total1 = parseFloat($(""#totalInput"").val() - tot);
            $(""#netInput"").val(total);
            $(""#totalInput"").val(total1);
            event.composedPath()[2].remove();
        }


    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<POS.ViewModel.EditOrderVM> Html { get; private set; }
    }
}
#pragma warning restore 1591
